{"version":3,"sources":["PuzzleComponents/Square.js","PuzzleComponents/Board.js","PuzzleComponents/Puzzle.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","react_default","a","createElement","onClick","className","style","fontSize","cubeSize","fontWeight","height","width","borderRadius","backgroundColor","cube","number","level","position","color","toString","Board","spaceCube","this","cubes","find","x","puzzle","i","columns","j","push","renderSquare","key","_this","PuzzleComponents_Square","renderPuzzle","React","Component","Puzzle","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","Number","initCubes","onShuffleClick","bind","assertThisInitialized","complexity","randomNos","randomI","Math","floor","random","length","swapCubes","checkIfWon","setState","spaceCubePos","k","tmpCubes","slice","row","splice","moveCube","alert","_this2","Board_Board","handleClick","margin","cubePos","tmpPlayerNo","App","src_PuzzleComponents_Puzzle","window","innerHeight","innerWidth","moves","targetMoves","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73f8147e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Square(props) {\n  return (\n        <button onClick={props.onClick}\n        className=\"col-sm-3\"\n        style={{\n            fontSize: props.cubeSize / 3,\n            fontWeight: \"bold\",\n            height: \"100%\",\n            width: \"100%\",\n            borderRadius: 4,\n            backgroundColor:\n              props.cube.number === props.level * props.level\n                ? \"white\"\n                : props.cube.number === props.cube.position\n                  ? \"#9dc9cc\"\n                  : \"#e2d1ae\",\n            color:\n              props.cube.number === props.level * props.level\n                ? \"white\"\n                : \"black\",\n          }}\n        >\n            {props.cube.number.toString() === \"\" ? \"        \" : props.cube.number.toString()}\n        </button>\n  );\n}\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\nimport './Board.css';\n\nexport default class Board extends React.Component {\n  renderPuzzle(level) {\n    var spaceCube = this.props.cubes.find(x => x.number === \"\");\n    let puzzle = [];\n    for (let i = 0; i < level; i++) {\n      let columns = [];\n      for (let j = 0; j < level; j++) {\n        columns.push(this.renderSquare(spaceCube, i * level + j));\n      }\n      puzzle.push(\n        <div className=\"row\" key={\"boardRow_\" + i}>\n          {columns}\n        </div>\n      );\n    }\n    // return puzzle;\n    return (\n     \n        <div className=\"container\">\n          {puzzle}\n        </div>\n       \n    );\n  }\n\n  renderSquare(spaceCube, i) {\n    let level = this.props.level;\n  \n    \n    return (\n      <Square\n        key={\"square_\" + i}\n        cube={this.props.cubes[i]}\n        cubeSize={this.props.cubeSize}\n        level={level}\n        spaceCube={spaceCube}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      this.renderPuzzle(this.props.level)\n    );\n  }\n}\n","import React from \"react\";\nimport Board from \"./Board\";\nimport \"./Puzzle.css\";\n\nclass Puzzle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: Number(props.level),\n      height: props.height,\n      width: props.width,\n      cubes: initCubes(props.level),\n    };\n    this.onShuffleClick = this.onShuffleClick.bind(this)\n  }\n\n  // componentDidMount(){\n  //   alert(this.state.level);\n  // }\n  onShuffleClick() {\n    let level = this.state.level;\n    var complexity = level * level * level * level;\n    var cubes = initCubes(level);\n    var randomNos = [];\n    for (var i = 0; i < complexity; i++) {\n      var randomI = Math.floor(Math.random() * (level * level) + 0);\n      if (randomI === randomNos[randomNos.length - 1]) continue;\n      randomNos.push(randomI);\n      swapCubes(cubes, this.state.level, randomI + 1);\n    }\n    if (checkIfWon(cubes, level)) {\n      this.onShuffleClick();\n    }\n    this.setState(\n      {\n        cubes: cubes\n      }\n    );\n  }\n\n  handleClick(i) {\n    //alert(\"hi\");\n    if (this.state.cubes[i].number === this.state.level * this.state.level) return;\n    const cubes = this.state.cubes;\n    moveCube(cubes, this.state.level, i);\n    this.setState({\n      cubes: cubes,\n    });\n    if(checkIfWon(cubes, this.state.level))\n    {\n      alert(\"You win!\");\n    }\n    \n  }\n\n  render() {\n    const cubes = this.state.cubes;\n    const level = this.state.level;\n    const cubeSize =\n      (this.state.height / 2 < this.state.width\n        ? this.state.height / 2\n        : this.state.width) /\n      (level + 1);\n    return (\n\n      <div>\n        <div className=\"container\">\n          This is where the top portion goes\n        </div>\n        <div className=\"container\">\n        <Board\n            cubes={cubes}\n            level={level}\n            cubeSize={cubeSize}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"container\">\n          <div style={{margin: \"10px\"}}>\n            <button className=\"col-sm1\" onClick={this.onShuffleClick}>new game</button>\n          </div>\n        </div>\n      </div>\n\n          \n          \n        \n        \n    );\n  }\n}\n\nexport default Puzzle;\n\nfunction moveCube(cubes, level, i) {\n  var spaceCubePos = cubes.find(x => x.number === level * level).position;\n  // vertical move\n  if (spaceCubePos % level === (i + 1) % level) {\n    //move up\n    if (i + 1 > spaceCubePos) {\n      for (var j = spaceCubePos + level; j <= i + 1; j = j + level) {\n        swapCubes(cubes, level, j);\n      }\n    } else {\n      for (var k = spaceCubePos - level; k >= i + 1; k = k - level) {\n        swapCubes(cubes, level, k);\n      }\n    }\n  }\n  //horizontal move\n  var tmpCubes = cubes.slice();\n  while (tmpCubes.length) {\n    var row = tmpCubes.splice(0, level);\n    // console.log(row);\n    if (\n      row.find(x => x.position === spaceCubePos) &&\n      row.find(x => x.position === i + 1)\n    ) {\n      //move right\n      if (i + 1 < spaceCubePos) {\n        for (j = spaceCubePos - 1; j >= i + 1; j--) {\n          swapCubes(cubes, level, j);\n        }\n      } else {\n        for (k = spaceCubePos + 1; k <= i + 1; k++) {\n          swapCubes(cubes, level, k);\n        }\n      }\n    }\n  }\n}\n\nfunction checkIfWon(cubes, level) {\n  var anyCubesLeft = cubes.find(\n    x => x.position !== x.number && x.number !== level * level\n  );\n  return !anyCubesLeft ? true : false;\n}\n\nfunction initCubes(level) {\n  var cubes = [];\n  for (let i = 0; i < level * level; i++) {\n    cubes.push({\n      position: i + 1,\n      number: i + 1\n    });\n  }\n  return cubes;\n}\n\nfunction swapCubes(cubes, level, cubePos) {\n  var spaceCube = cubes.find(x => x.number === level * level);\n  if (\n    spaceCube.position - level === cubePos ||\n    (spaceCube.position - 1 === cubePos && spaceCube.position % level !== 1) ||\n    (spaceCube.position + 1 === cubePos && spaceCube.position % level !== 0) ||\n    spaceCube.position + level === cubePos\n  ) {\n    var tmpPlayerNo = cubes[cubePos - 1].number;\n    cubes[cubePos - 1].number = spaceCube.number;\n    cubes[spaceCube.position - 1].number = tmpPlayerNo;\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Puzzle from \"./PuzzleComponents/Puzzle.js\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Puzzle\n          level=\"4\"\n          height={window.innerHeight}\n          width={window.innerWidth}\n          moves=\"0\"\n          targetMoves=\"0\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}